<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RoPython</title><link>http://ropython.org/</link><description></description><atom:link href="http://ropython.org/feeds/unknown.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 16 Jul 2015 00:00:00 +0300</lastBuildDate><item><title>Packaging and Flowy</title><link>http://ropython.org/2015/07/16/packaging-and-flowy/</link><description>&lt;p&gt;Last minute meetup ...&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="10%" /&gt;
&lt;col width="90%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th class="stub"&gt;6:00&lt;/th&gt;
&lt;td&gt;Entrance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;6:15&lt;/th&gt;
&lt;td&gt;&lt;p class="first"&gt;Less known packaging features and tricks&lt;/p&gt;
&lt;p&gt;You’ve been making packages for a while now. Everything works almost fine, however, lots of new features and tools have been developed recently. Some are really obscure. And there’s a chance they can save you time and help you avoid packaging-induced-pain. I’m willing to bet couple of beers you haven’t seen these features and/or tools before.&lt;/p&gt;
&lt;p&gt;This talk is going to show you:&lt;/p&gt;
&lt;ul class="last simple"&gt;
&lt;li&gt;Patterns and tricks you can use in your setup.py.&lt;/li&gt;
&lt;li&gt;Obscure pip/setuptools/virtualenv/python features you can use to improve your packaging experience (be it as a user of packages or a package author).&lt;/li&gt;
&lt;li&gt;Fledgeling alternative tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;7:00&lt;/th&gt;
&lt;td&gt;Break&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;7:15&lt;/th&gt;
&lt;td&gt;&lt;p class="first"&gt;Distributed Workflows with Flowy&lt;/p&gt;
&lt;p&gt;This presentation introduces Flowy, a library for building and running distributed, asynchronous workflows built on top of different backends (such as Amazon’s SWF). Flowy deals away with the spaghetti code that often crops up from orchestrating complex workflows. It is ideal for applications that do multi-phased batch processing, media encoding, long-running tasks, and/or background processing.&lt;/p&gt;
&lt;p class="last"&gt;We’ll start by discussing Flowy’s unique execution model and see how different execution topologies can be implemented on top of it. During the talk we’ll run and visualize workflows using a local backend. We’ll then take a look at what it takes to scale beyond a single machine by using an external service like SWF.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Echipa RoPython</dc:creator><pubDate>Thu, 16 Jul 2015 00:00:00 +0300</pubDate><guid>tag:ropython.org,2015-07-16:2015/07/16/packaging-and-flowy/</guid><category>unknown</category></item></channel></rss>